// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  password     String
  name         String?
  phone        String?
  age          String?
  role         String
  rentals      Rental[]
  cars         Car[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
}

model Rental {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  dateRent   String
  dateReturn String
  totalDays  Int
  location   String
  verified   Boolean  @default(false)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade) // onDelete:Cascade means if user is deleted, then this model will be deleted too
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
  extras     Extras
}

type Extras {
  coverage     Boolean @default(false)
  child_safety Boolean @default(false)
  GPS          Boolean @default(false)
}

model Car {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  image          String
  type           String
  typeDefinition String
  model          String
  transmission   String
  kml            Int
  passengers     Int
  price          Int
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade) // onDelete:Cascade means if user is deleted, then this model will be deleted too
  userId         String @db.ObjectId
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  verified  Boolean  @default(false)
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
}

model Token {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  token  String
  userId String @unique

  // @@fulltext([userId(expire: 1)])
}

// enum Role {
//   USER
//   ADMIN
// }

// onDelete:Cascade does not work on MONGODB!!!!!!!!!!!!!!!!
