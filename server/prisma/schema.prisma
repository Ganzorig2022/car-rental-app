// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  email        String        @unique
  password     String
  name         String?
  phone        String?
  age          String?
  role         String
  rentals      Rental[]
  cars         Car[]
  transactions Transaction[]
  createdAt    DateTime      @default(now())
}

model Rental {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  dateRent   String
  dateReturn String
  location   String
  verified   Boolean  @default(false)
  // onDelete:Cascade means if user is deleted, then this model will be deleted too
  renter     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
}

model Car {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  image          String
  type           String
  typeDefinition String
  model          String
  kml            String
  transmission   String
  passengers     String
  doors          String
  price          Int
  mileage        String
  details        Details
  user           User    @relation(fields: [userId], references: [id])
  userId         String  @unique @db.ObjectId
}

type Details {
  make      String
  model     String
  year      String
  exterior  String
  interioir String
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  verified  Boolean  @default(false)
  renter    User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique @db.ObjectId
  createdAt DateTime @default(now())
}

// enum Role {
//   USER
//   ADMIN
// }
